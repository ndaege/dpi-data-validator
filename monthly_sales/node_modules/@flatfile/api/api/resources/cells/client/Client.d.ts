/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Flatfile from "../../..";
export declare namespace Cells {
    interface Options {
        environment?: core.Supplier<environments.FlatfileEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Cells {
    protected readonly _options: Cells.Options;
    constructor(_options?: Cells.Options);
    /**
     * Returns record cell values grouped by all fields in the sheet
     *
     * @example
     *     await flatfile.cells.getValues("us_sh_YOUR_ID", {
     *         fieldKey: "firstName",
     *         sortField: "firstName",
     *         sortDirection: Flatfile.SortDirection.Asc,
     *         filter: Flatfile.Filter.Valid
     *     })
     */
    getValues(sheetId: Flatfile.SheetId, request?: Flatfile.GetFieldValuesRequestDeprecated, requestOptions?: Cells.RequestOptions): Promise<Flatfile.CellsResponseDeprecated>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
