"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Property = void 0;
const core = __importStar(require("../../../../core"));
const StringProperty_1 = require("./StringProperty");
const NumberProperty_1 = require("./NumberProperty");
const BooleanProperty_1 = require("./BooleanProperty");
const DateProperty_1 = require("./DateProperty");
const EnumProperty_1 = require("./EnumProperty");
const ReferenceProperty_1 = require("./ReferenceProperty");
const StringListProperty_1 = require("./StringListProperty");
const EnumListProperty_1 = require("./EnumListProperty");
exports.Property = core.serialization
    .union("type", {
    string: StringProperty_1.StringProperty,
    number: NumberProperty_1.NumberProperty,
    boolean: BooleanProperty_1.BooleanProperty,
    date: DateProperty_1.DateProperty,
    enum: EnumProperty_1.EnumProperty,
    reference: ReferenceProperty_1.ReferenceProperty,
    "string-list": StringListProperty_1.StringListProperty,
    "enum-list": EnumListProperty_1.EnumListProperty,
})
    .transform({
    transform: (value) => value,
    untransform: (value) => value,
});
