/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Flatfile from "../../..";
export declare namespace Apps {
    interface Options {
        environment?: core.Supplier<environments.FlatfileEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Apps {
    protected readonly _options: Apps.Options;
    constructor(_options?: Apps.Options);
    /**
     * Returns apps in an account
     */
    list(requestOptions?: Apps.RequestOptions): Promise<Flatfile.AppsResponse>;
    /**
     * Returns an app
     *
     * @example
     *     await flatfile.apps.get("us_app_YOUR_ID")
     */
    get(appId: Flatfile.AppId, requestOptions?: Apps.RequestOptions): Promise<Flatfile.AppResponse>;
    /**
     * Updates an app
     *
     * @example
     *     await flatfile.apps.update("us_app_YOUR_ID", {
     *         name: "Nightly Data Loads",
     *         namespace: "nightly-data",
     *         entity: "Sync",
     *         entityPlural: "Syncs",
     *         icon: "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
     *         metadata: {
     *             "foo": "bar"
     *         }
     *     })
     */
    update(appId: Flatfile.AppId, request: Flatfile.AppPatch, requestOptions?: Apps.RequestOptions): Promise<Flatfile.AppResponse>;
    /**
     * Creates an app
     *
     * @example
     *     await flatfile.apps.create({
     *         name: "Nightly Data Loads",
     *         namespace: "nightly-data",
     *         type: Flatfile.AppType.Custom,
     *         entity: "Sync",
     *         entityPlural: "Syncs",
     *         icon: "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
     *         metadata: {
     *             "foo": "bar"
     *         }
     *     })
     */
    create(request: Flatfile.AppCreate, requestOptions?: Apps.RequestOptions): Promise<Flatfile.AppResponse>;
    /**
     * Deletes an app
     *
     * @example
     *     await flatfile.apps.delete("us_app_YOUR_ID")
     */
    delete(appId: Flatfile.AppId, requestOptions?: Apps.RequestOptions): Promise<Flatfile.SuccessResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
