!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@flatfile/util-common"),require("@flatfile/hooks")):"function"==typeof define&&define.amd?define(["exports","@flatfile/util-common","@flatfile/hooks"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).PluginRecordHook={},e.utilCommon,e.hooks)}(this,(function(e,t,o){"use strict";function r(e){let t,o=e[0],r=1;for(;r<e.length;){const c=e[r],n=e[r+1];if(r+=2,("optionalAccess"===c||"optionalCall"===c)&&null==o)return;"access"===c||"optionalAccess"===c?(t=o,o=n(o)):"call"!==c&&"optionalCall"!==c||(o=n(((...e)=>o.call(t,...e))),t=void 0)}return o}class c{constructor(e){this.records=e,c.prototype.__init.call(this),c.prototype.__init2.call(this),this.records=e}__init(){this.toFlatfileRecords=()=>{if(this.records instanceof o.FlatfileRecords)return this.records;{const e=this.records;return new o.FlatfileRecords(e.map((e=>{let t={};for(let[o,c]of Object.entries(e.values))if(r([c,"access",e=>e.links,"optionalAccess",e=>e.length])&&c.value){const e=c.links.map((e=>{let t={};for(let[o,r]of Object.entries(e.values))t[o]=r.value;return t}));t[o]={value:c.value,links:e}}else t[o]=c.value;const o=e.metadata;return{rowId:e.id,rawData:t,metadata:o}})))}}}__init2(){this.toXRecords=()=>{if(this.records[0]instanceof o.FlatfileRecord){return this.records.map((e=>{const t=e.toJSON();let o={};for(let[e,r]of Object.entries(t.row.rawData)){const c=t.info.filter((t=>t.field===e)).map((e=>({message:e.message,type:e.level,source:"custom-logic",path:e.path})));o[e]={value:null===r||"object"!=typeof r||Array.isArray(r)?r:r.value,messages:c,valid:!0}}const r=t.row.metadata,c=t.config;return{id:String(e.rowId),values:o,metadata:r,config:c}}))}return this.records}}}function n(e,t){if(e===t)return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;let o=Object.keys(e),r=Object.keys(t);if(o.length!==r.length)return!1;for(let c of o)if(!r.includes(c)||!n(e[c],t[c]))return!1;return!0}function s(e){e&&(Object.keys(e).includes("valid")&&delete e.valid,a(e.values,["updatedAt"]))}function a(e,t){"object"==typeof e&&null!==e&&Object.keys(e).forEach((o=>{t.includes(o)?delete e[o]:"messages"===o?Array.isArray(e.messages)&&(e.messages=e.messages.filter((e=>"custom-logic"===e.source))):"object"==typeof e[o]&&null!==e[o]&&a(e[o],t)}))}async function i(e,o){const{commitId:r}=e.context,{trackChanges:c}=e.payload;if(c)try{await e.fetch(`v1/commits/${r}/complete`,{method:"POST"}),o&&t.logInfo("@flatfile/plugin-record-hook","Commit completed successfully")}catch(e){t.logError("@flatfile/plugin-record-hook",`Error completing commit ${r}`)}}const l=async(e,t,o={})=>{const{concurrency:r=10}=o;return d(e,(async(e,o)=>{const c=new Set;for(const n of e){const e=Promise.resolve(t(n,o)).finally((()=>c.delete(e)));c.add(e),c.size>=r&&await Promise.race(c)}return await Promise.all(c)}),o)},d=async(e,o,r={})=>{const{debug:a=!1}=r;try{const l=await e.cache.init("data",(async()=>{try{const t=await e.data;return t.records&&t.records.length?t.records:void 0}catch(e){throw new Error("Error fetching records")}}));if(!l||0===l.length)return t.logInfo("@flatfile/plugin-record-hook","No records to process"),void await i(e,a);const d=await e.cache.init("records",(async()=>await async function(e){return new c(e).toFlatfileRecords()}(l)));await t.asyncBatch(d.records,o,r,e),e.afterAll((async()=>{const{records:o}=e.cache.get("records"),r=await async function(e){return new c(e).toXRecords()}(o),l=await e.cache.get("data"),d=r.filter((e=>{const o=l.find((t=>t.id===e.id));s(o);const r=!n(e,o);return a&&t.logInfo("@flatfile/plugin-record-hook",`Record ${e.id} ${r?"has":"does not have"} changes`),r}));if(!d||0===d.length)return t.logInfo("@flatfile/plugin-record-hook","No records modified"),void await i(e,a);try{return await e.update(d)}catch(e){throw new Error("Error updating records")}}))}catch(o){return t.logError("@flatfile/plugin-record-hook",o.message),console.log(o),void await i(e,a)}},f=(e,t,o={})=>r=>{r.on("commit:created",{sheetSlug:e},(e=>l(e,t,o)))},u=(e,t,o={})=>r=>{r.on("commit:created",{sheetSlug:e},(e=>d(e,t,o)))};e.BulkRecordHook=d,e.RecordHook=l,e.bulkRecordHook=u,e.bulkRecordHookPlugin=u,e.recordHook=f,e.recordHookPlugin=f}));
